/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Task model module.
 * @module model/Task
 * @version 0.1.0
 */
class Task {
    /**
     * Constructs a new <code>Task</code>.
     * @alias module:model/Task
     * @param title {Object} 
     * @param assignee {Object} 
     * @param assigned {Object} 
     * @param columnId {Object} 
     */
    constructor(title, assignee, assigned, columnId) { 
        
        Task.initialize(this, title, assignee, assigned, columnId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, assignee, assigned, columnId) { 
        obj['title'] = title;
        obj['assignee'] = assignee;
        obj['assigned'] = assigned;
        obj['column_id'] = columnId;
    }

    /**
     * Constructs a <code>Task</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Task} obj Optional instance to populate.
     * @return {module:model/Task} The populated <code>Task</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Task();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], Object);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], Object);
            }
            if (data.hasOwnProperty('assignee')) {
                obj['assignee'] = ApiClient.convertToType(data['assignee'], Object);
            }
            if (data.hasOwnProperty('assigned')) {
                obj['assigned'] = ApiClient.convertToType(data['assigned'], Object);
            }
            if (data.hasOwnProperty('column_id')) {
                obj['column_id'] = ApiClient.convertToType(data['column_id'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {Object} id
 */
Task.prototype['id'] = undefined;

/**
 * @member {Object} title
 */
Task.prototype['title'] = undefined;

/**
 * @member {Object} assignee
 */
Task.prototype['assignee'] = undefined;

/**
 * @member {Object} assigned
 */
Task.prototype['assigned'] = undefined;

/**
 * @member {Object} column_id
 */
Task.prototype['column_id'] = undefined;






export default Task;

