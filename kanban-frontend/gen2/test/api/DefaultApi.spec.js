/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FastApi);
  }
}(this, function(expect, FastApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FastApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('createBoardBoardUpdatePut', function() {
      it('should call createBoardBoardUpdatePut successfully', function(done) {
        //uncomment below and update the code to test createBoardBoardUpdatePut
        //instance.createBoardBoardUpdatePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTaskTaskDeleteDelete', function() {
      it('should call createTaskTaskDeleteDelete successfully', function(done) {
        //uncomment below and update the code to test createTaskTaskDeleteDelete
        //instance.createTaskTaskDeleteDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTaskTaskUpdatePut', function() {
      it('should call createTaskTaskUpdatePut successfully', function(done) {
        //uncomment below and update the code to test createTaskTaskUpdatePut
        //instance.createTaskTaskUpdatePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBoardBoardDeleteDelete', function() {
      it('should call deleteBoardBoardDeleteDelete successfully', function(done) {
        //uncomment below and update the code to test deleteBoardBoardDeleteDelete
        //instance.deleteBoardBoardDeleteDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteColumnBoardColumnDeleteDelete', function() {
      it('should call deleteColumnBoardColumnDeleteDelete successfully', function(done) {
        //uncomment below and update the code to test deleteColumnBoardColumnDeleteDelete
        //instance.deleteColumnBoardColumnDeleteDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBoardBoardGet', function() {
      it('should call getBoardBoardGet successfully', function(done) {
        //uncomment below and update the code to test getBoardBoardGet
        //instance.getBoardBoardGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBoardlistBoardlistGet', function() {
      it('should call getBoardlistBoardlistGet successfully', function(done) {
        //uncomment below and update the code to test getBoardlistBoardlistGet
        //instance.getBoardlistBoardlistGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getColumnColumnGet', function() {
      it('should call getColumnColumnGet successfully', function(done) {
        //uncomment below and update the code to test getColumnColumnGet
        //instance.getColumnColumnGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTasksTasksGet', function() {
      it('should call getTasksTasksGet successfully', function(done) {
        //uncomment below and update the code to test getTasksTasksGet
        //instance.getTasksTasksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loginTokenPost', function() {
      it('should call loginTokenPost successfully', function(done) {
        //uncomment below and update the code to test loginTokenPost
        //instance.loginTokenPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('moveTaskTaskMovePost', function() {
      it('should call moveTaskTaskMovePost successfully', function(done) {
        //uncomment below and update the code to test moveTaskTaskMovePost
        //instance.moveTaskTaskMovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rootAuthDebugGet', function() {
      it('should call rootAuthDebugGet successfully', function(done) {
        //uncomment below and update the code to test rootAuthDebugGet
        //instance.rootAuthDebugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rootGet', function() {
      it('should call rootGet successfully', function(done) {
        //uncomment below and update the code to test rootGet
        //instance.rootGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('signupSignupPost', function() {
      it('should call signupSignupPost successfully', function(done) {
        //uncomment below and update the code to test signupSignupPost
        //instance.signupSignupPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateColumnBoardColumnUpdatePost', function() {
      it('should call updateColumnBoardColumnUpdatePost successfully', function(done) {
        //uncomment below and update the code to test updateColumnBoardColumnUpdatePost
        //instance.updateColumnBoardColumnUpdatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
